import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d.art3d import Poly3DCollection
import matplotlib.patches as patches
import numpy as np

def transform(regions):
    trans = []
    for r in regions:
        t = (r[0],r[3],r[1],r[4],r[2],r[5])
        trans.append(t)
    return trans

def plot_Ant_Maze(regions):
    fig, ax = plt.subplots()

    ax.set_aspect('equal')

    # Arrow initialization
    x_start = -10  # x-coordinate of the starting point
    y_start = -10  # y-coordinate of the starting point
    x_end = -10  # x-coordinate of the ending point
    y_end = -10

    # Define rectangle parameters (position and size)
    rectangle = patches.Rectangle((-6.5, -6.5), 29, 2, facecolor='grey')
    ax.add_patch(rectangle)
    rectangle = patches.Rectangle((-6, 20.5), 28, 2, facecolor='grey')
    ax.add_patch(rectangle)
    rectangle = patches.Rectangle((-6.5, -6.5), 2, 29, facecolor='grey')
    ax.add_patch(rectangle)
    rectangle = patches.Rectangle((20.5, -6.5), 2, 29, facecolor='grey')
    ax.add_patch(rectangle)
    rectangle = patches.Rectangle((-6.5, 5.5), 16, 4, facecolor='grey')
    ax.add_patch(rectangle)
    rectangle = patches.Rectangle((7.5, -4.5), 2, 3, facecolor='grey')
    ax.add_patch(rectangle)
    rectangle = patches.Rectangle((7.5, 2.5), 2, 3, facecolor='grey')
    ax.add_patch(rectangle)
    rectangle = patches.Rectangle((9.5, 5.5), 3, 2, facecolor='grey')
    ax.add_patch(rectangle)
    rectangle = patches.Rectangle((17.5, 5.5), 3, 2, facecolor='grey')
    ax.add_patch(rectangle)
    rectangle = patches.Rectangle((7.5, 9.5), 2, 3, facecolor='grey')
    ax.add_patch(rectangle)
    rectangle = patches.Rectangle((7.5, 17.5), 2, 3, facecolor='grey')
    ax.add_patch(rectangle)
    

    for r in regions:
        rectangle = patches.Rectangle((r[0], r[1]), r[2]-r[0], r[3]-r[1] , alpha=0.5, facecolor='g', edgecolor='k')
        ax.add_patch(rectangle)
        # if x_start > -10 and y_start > -10:
        #     x_end = (r[2] - r[0])/2 + r[0]  # x-coordinate of the ending point
        #     y_end = (r[3] - r[1])/2 + r[1]  # y-coordinate of the ending point
        #     # Create an arrow patch
        #     arrow = patches.FancyArrow(x_start, y_start, x_end - x_start, y_end - y_start,
        #                                width=0.1, head_width=0.6, head_length=0.6, edgecolor='b', facecolor='b')
        #     ax.add_patch(arrow)

        # Define arrow parameters (start and end points)
        x_start = (r[2] - r[0])/2 + r[0]  # x-coordinate of the starting point
        y_start = (r[3] - r[1])/2 + r[1]  # y-coordinate of the starting point

    # Define circle parameters (position and radius)
    x = 0  # x-coordinate of the center
    y = 16  # y-coordinate of the center
    radius = 0.5  # Radius of the circle

    # Create a Circle patch
    circle = patches.Circle((x, y), radius, linewidth=2, edgecolor='y', facecolor='y')

    # Add the circle to the axis
    ax.add_patch(circle)

    # Set axis limits (optional)
    ax.set_xlim(-8, 25)
    ax.set_ylim(-8, 25)

    # Show the plot
    plt.show()

# Regions
# maze 0
# regions_antmaze = [
# (6.0,-1.375,9.5,1.75),
# (9.5,1.75,15.0,8),
# (9.5,8,20.5,20.5),
# (-4.5,8,9.5,20.5),
# (6.0,-4.5,9.5,-1.375),
# (6.0,1.75,9.5,8),
# (-4.5,-4.5,6.0,8.0),
# (9.5,-4.5,20.5,1.75),
# (15.0,1.75,17.75,8),
# (17.75,1.75,20.5,8.0)
# ]

# regions_antmaze = [   
# (6.0,-4.5,9.5,-1.375),
# (9.5,-4.5,20.5,8),
# (9.5,8,20.5,20.5),
# (-4.5,8,9.5,20.5),
# (6.0,-1.375,9.5,1.75),
# (6.0,1.75,9.5,4.875),
# (6.0,4.875,9.5,8),
# (3.375,-2.9375,6.0,0.1875),
# (-1.875,-1.375,-0.5625,1.75),
# (-0.5625,-1.375,0.75,1.75),
# (3.375,0.1875,6.0,1.75),
# (-4.5,1.75,0.75,8.0),
# (0.75,4.875,3.375,8.0),
# (3.375,4.875,6.0,8.0),
# (-4.5,-4.5,-1.875,1.75),
# (-1.875,-4.5,0.75,-1.375),
# (0.75,-4.5,6.0,-2.9375),
# (3.375,1.75,6.0,4.875),
# (0.75,-2.9375,3.375,4.875)
# ]
    
regions_antmaze = [
# (6.0,-4.5,9.5,-1.375),
# (9.5,-4.5,15.0,4.875),
# (9.5,8,20.5,20.5),
# (-4.5,8,9.5,20.5),
# (2.5,1.75,6.0,8),
# (-4.5,-4.5,2.5,8.0),
# (2.5,-4.5,6.0,1.75),
# (6.0,-1.375,9.5,8.0),
# (9.5,4.875,20.5,8),
# (15.0,-2.15625,20.5,4.875),
# (17.75,-4.5,20.5,-2.15625),
# (15.0,-4.5,17.75,-2.15625)

# (2.5,-1.375,9.5,8.0),
# (9.5,-4.5,15.0,1.75),
# (9.5,14.25,12.25,20.5),
# (-4.5,8,9.5,20.5),
# (2.5,-4.5,9.5,-1.375),
# (-4.5,-4.5,2.5,4.875),
# (-4.5,4.875,2.5,8),
# (9.5,1.75,20.5,8),
# (17.75,-4.5,20.5,-1.375),
# (15.0,-1.375,20.5,1.75),
# (15.0,-4.5,17.75,-1.375),
# (15.0,17.375,17.75,20.5),
# (17.75,17.375,20.5,20.5),
# (9.5,8,20.5,14.25),
# (12.25,14.25,20.5,17.375),
# (12.25,17.375,15.0,20.5)

# (2.5,1.75,6.0,4.875),
# (9.5,1.75,20.5,8),
# (9.5,8,20.5,20.5),
# (-4.5,8,9.5,20.5),
# (6.0,1.75,9.5,4.875),
# (-1.0,-1.375,9.5,1.75),
# (2.5,-4.5,9.5,-1.375),
# (-4.5,4.875,2.5,8),
# (2.5,4.875,9.5,8),
# (-4.5,-1.375,-1.0,1.75),
# (-4.5,1.75,2.5,4.875),
# (-4.5,-4.5,2.5,-1.375),
# (9.5,-4.5,20.5,1.75)

# (2.5,-1.375,9.5,8.0),
# (9.5,-4.5,20.5,8),
# (9.5,8,20.5,20.5),
# (-4.5,8,9.5,20.5),
# (2.5,-4.5,9.5,-1.375),
# (-4.5,-4.5,2.5,8.0),
# (15.0,4.875,20.5,8),
# (9.5,-4.5,20.5,4.875),
# (9.5,14.25,20.5,20.5)

# (2.5,-1.375,9.5,8.0),
# (9.5,4.875,15.0,8),
# (9.5,8,20.5,14.25),
# (-4.5,8,9.5,20.5),
# (2.5,-4.5,9.5,-1.375),
# (-4.5,-4.5,2.5,8.0),
# (15.0,4.875,20.5,8),
# (9.5,-4.5,20.5,4.875),
# (9.5,14.25,20.5,20.5)

# (2.5,-1.375,9.5,8.0),
# (9.5,-4.5,15.0,1.75),
# (9.5,14.25,12.25,20.5),
# (-4.5,8,9.5,20.5),
# (2.5,-4.5,9.5,-1.375),
# (-4.5,-4.5,2.5,4.875),
# (-4.5,4.875,2.5,8),
# (9.5,1.75,20.5,8),
# (17.75,-4.5,20.5,-1.375),
# (15.0,-1.375,20.5,1.75),
# (15.0,-4.5,17.75,-1.375),
# (15.0,17.375,17.75,20.5),
# (17.75,17.375,20.5,20.5),
# (9.5,8,20.5,14.25),
# (12.25,14.25,20.5,17.375),
# (12.25,17.375,15.0,20.5)

# (2.5,4.875,6.0,8),
# (9.5,-4.5,15.0,1.75),
# (9.5,8,20.5,14.25),
# (-4.5,8,9.5,20.5),
# (6.0,-1.375,9.5,8.0),
# (6.0,-4.5,9.5,-1.375),
# (2.5,1.75,6.0,4.875),
# (-4.5,-4.5,6.0,1.75),
# (-4.5,1.75,2.5,8),
# (9.5,1.75,20.5,8),
# (15.0,-4.5,20.5,1.75),
# (9.5,14.25,20.5,20.5)

# (2.5,4.875,6.0,8),
# (9.5,-4.5,20.5,8.0),
# (9.5,8,20.5,20.5),
# (-4.5,8,9.5,20.5),
# (6.0,1.75,9.5,8),
# (2.5,1.75,6.0,4.875),
# (2.5,-4.5,9.5,1.75),
# (-4.5,-4.5,2.5,8.0)

# (2.5,-1.375,9.5,8.0),
# (9.5,4.875,15.0,8),
# (9.5,8,20.5,14.25),
# (-4.5,8,9.5,20.5),
# (2.5,-4.5,9.5,-1.375),
# (-4.5,-4.5,2.5,8.0),
# (15.0,4.875,20.5,8),
# (9.5,-4.5,20.5,4.875),
# (9.5,14.25,20.5,20.5)

# (6.0,-4.5,9.5,-1.375),
# (9.5,-4.5,20.5,8),
# (9.5,8,20.5,20.5),
# (-4.5,8,9.5,20.5),
# (6.0,-1.375,9.5,1.75),
# (6.0,1.75,9.5,4.875),
# (6.0,4.875,9.5,8),
# (3.375,-2.9375,6.0,0.1875),
# (-1.875,-1.375,-0.5625,1.75),
# (-0.5625,-1.375,0.75,1.75),
# (3.375,0.1875,6.0,1.75),
# (-4.5,1.75,0.75,8.0),
# (0.75,4.875,3.375,8.0),
# (3.375,4.875,6.0,8.0),
# (-4.5,-4.5,-1.875,1.75),
# (-1.875,-4.5,0.75,-1.375),
# (0.75,-4.5,6.0,-2.9375),
# (3.375,1.75,6.0,4.875),
# (0.75,-2.9375,3.375,4.875)

# (2.5,4.875,6.0,8),
# (9.5,-4.5,20.5,8.0),
# (9.5,8,20.5,20.5),
# (-4.5,8,9.5,20.5),
# (6.0,1.75,9.5,8),
# (2.5,1.75,6.0,4.875),
# (2.5,-4.5,9.5,1.75),
# (-4.5,-4.5,2.5,8.0)

(2.5,4.875,6.0,8),
(9.5,-4.5,15.0,1.75),
(9.5,8,20.5,14.25),
(-4.5,8,9.5,20.5),
(6.0,-1.375,9.5,8.0),
(6.0,-4.5,9.5,-1.375),
(2.5,1.75,6.0,4.875),
(-4.5,-4.5,6.0,1.75),
(-4.5,1.75,2.5,8),
(9.5,1.75,20.5,8),
(15.0,-4.5,20.5,1.75),
(9.5,14.25,20.5,20.5)


]


plot_Ant_Maze(regions_antmaze)